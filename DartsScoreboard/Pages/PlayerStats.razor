@page "/PlayerStatistics/{playerId:int}"
@namespace DartsScoreboard

<h3>Player Stats</h3>

@if (Player == null)
{
    <p>Loading player...</p>
}
else
{
    <div class="player-stats">
        <h4>@Player.Name</h4>
        <p><strong>Checkout Percentage:</strong> @Player.Stats.CheckoutPercentage.ToString("F2")%</p>
        <p><strong>Three Dart Average:</strong> @Player.Stats.ThreeDartAverage.ToString("F2")</p>
        <p><strong>Darts Per Leg:</strong> @Player.Stats.DartsPerLeg.ToString()</p>
        <p><strong>Best 3-Dart Leg Average:</strong> @Player.Stats.BestThreeDartLegAverage.ToString("F2")</p>
        <p><strong>Total Darts Thrown:</strong> @Player.Stats.TotalDartsThrown</p>
        <p><strong>Number of Doubles Thrown:</strong> @Player.Stats.NumOfDoublesThrown</p>

        <h5>High Score Hits:</h5>
        <ul>
            @foreach (var kvp in Player.Stats.HighScoreHits)
            {
                <li>@kvp.Key: @kvp.Value</li>
            }
        </ul>

        <button class="btn btn-secondary mt-3" @onclick="GoBack">Back</button>
    </div>
}

@code {
	[Parameter] public int playerId { get; set; }
    [Inject] public NavigationManager NavManager { get; set; } = default!;
    [Inject] public IUserPersistence _UserPersistence { get; set; } = default!;

    public User? Player { get; set; }

    protected override async Task OnInitializedAsync()
    {
        Player = await _UserPersistence.GetUser(playerId);
    }

    private void GoBack()
    {
        NavManager.NavigateTo("/PlayersStats");
    }
}
