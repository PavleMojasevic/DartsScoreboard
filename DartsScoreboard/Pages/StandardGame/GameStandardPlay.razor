@namespace DartsScoreboard
@page "/gameStandardPlay/{GameCode}"

@if (WinnerPopup)
{
    <div class="winner-popup">
        <h2>Game Over 🏋️</h2>

        <h3 class="mb-3">Final Player Statistics</h3>

        @foreach (var player in Players)
        {
            <div class="card p-3 mb-3">
                <h4>@player.Name @(player.Id == Players[CurrentPlayerIndex].Id ? "(Winner 🏆)" : "")</h4>
                <p>Three-Dart Average: @player.Stats.ThreeDartAverage.ToString("F2")</p>
                <p>Best three-dart average leg: @player.Stats.BestThreeDartLegAverage.ToString("F2")</p>
                <p>Checkout Percentage: @player.Stats.CheckoutPercentage.ToString("F2")%</p>
                <p>Best leg: @player.Stats.BestNumOfDartsThrown.ToString()</p>
                <p>Worst leg: @player.Stats.WorstNumOfDartsThrown.ToString()</p>
                <p>Highest Score: @player.Stats.HighestScore</p>

                <h5>High Scores Hit:</h5>
                <ul>
                    @foreach (var hit in player.Stats.HighScoreHits)
                    {
                        @if (hit.Value > 0)
                        {
                            <li>@hit.Key: @hit.Value times</li>
                        }
                    }
                </ul>
            </div>
        }

        <div class="mt-4">
            <button class="btn btn-success me-2" @onclick="ResetGame">Restart Game</button>
            <button class="btn btn-outline-secondary" @onclick="GoHome">Home</button>
        </div>
    </div>
}
else
{
    <div class="main-container">
        <div class="players">
            @foreach (var player in Players)
            {
                <div class="player-box @(Players[CurrentPlayerIndex].Id == player.Id ? "current-player" : "")">
                    <h3>
                        @player.Name
                        <span class="text-muted" style="font-size: 1.5rem;">
                            Legs: @PlayerScores[player.Id].PlayerLegs, Sets: @PlayerScores[player.Id].PlayerSets
                        </span>
                    </h3>
                    <p>
                        Score: @GetDisplayedScore(player.Id)
                        @if (SuggestionFinishes.TryGetValue(GetDisplayedScore(player.Id).ToString(), out var suggestions))
                        {
                            <span class="text-muted"> (@string.Join(", ", suggestions))</span>
                        }
                    </p>
                    <p>Leg Average: @player.Stats.ThreeDartLegAverage.ToString("F2")</p>
                    <p>Average: @player.Stats.ThreeDartAverage.ToString("F2")</p>
                    <p>Number of darts: @PlayerScores[player.Id].PlayerThrowsLeg.ToString()</p>
                </div>
            }
        </div>

        <div class="input-area">
            <!-- Mode Switch -->
            <div class="btn-group mb-3" role="group">
                <button class="btn @(UseThreeDartMode ? "btn-outline-secondary" : "btn-primary")" @onclick="() => UseThreeDartMode = false">Regular</button>
                <button class="btn @(UseThreeDartMode ? "btn-primary" : "btn-outline-secondary")" @onclick="() => UseThreeDartMode = true">3 Darts</button>
            </div>

            @if (UseThreeDartMode)
            {
                <!-- Dart Input Squares -->
                <div class="d-flex justify-content-center mb-2">
                    <div class="dart-input @(DartIndex == 1 ? "active" : "")">@InputScoreDartOne</div>
                    <div class="dart-input @(DartIndex == 2 ? "active" : "")">@InputScoreDartTwo</div>
                    <div class="dart-input @(DartIndex == 3 ? "active" : "")">@InputScoreDartThree</div>
                </div>

                <!-- Multiplier Mode Switch -->
                <div class="btn-group mb-3" role="group">
                    <button class="btn @(SelectedMultiplier == "S" ? "btn-primary" : "btn-outline-secondary")" @onclick='() => SelectedMultiplier = "S"'>Single</button>
                    <button class="btn @(SelectedMultiplier == "D" ? "btn-primary" : "btn-outline-secondary")" @onclick='() => SelectedMultiplier = "D"'>Double</button>
                    <button class="btn @(SelectedMultiplier == "T" ? "btn-primary" : "btn-outline-secondary")" @onclick='() => SelectedMultiplier = "T"'>Triple</button>
                </div>

                <!-- Keyboard -->
                @switch (SelectedMultiplier)
                {
                    case "D":
                        <Keyboard KeyboardParameters="KeyboardParamsEachDartDouble" KeyClick="HandleKeyEachDart" />
                        break;
                    case "T":
                        <Keyboard KeyboardParameters="KeyboardParamsEachDartTriple" KeyClick="HandleKeyEachDart" />
                        break;
                    default:
                        <Keyboard KeyboardParameters="KeyboardParamsEachDartSingle" KeyClick="HandleKeyEachDart" />
                        break;
                }

                <div class="submit-button mt-2">
                    <button class="btn btn-success" @onclick="SubmitScore">Submit</button>
                </div>
            }
            else
            {
                <!-- Regular Input Mode -->
                <div class="input-display text-center mb-2">
                    <h2>Input: @InputScore</h2>
                </div>

                <div class="submit-button">
                    <button class="btn btn-success" @onclick="SubmitScore">
                        Submit
                    </button>
                </div>

                <div class="keyboard-container">
                    <Keyboard KeyboardParameters="KeyboardParams" KeyClick="HandleKey" />
                </div>
            }
        </div>
    </div>
}

@if (ShowCheckoutPopup)
{
    <div class="modal-overlay">
        <div class="modal-box">
            <h4 style="color:black">Checkout Information</h4>

            <div class="mb-2">
                <label style="color:black">Number of darts thrown at double:</label>
                <div class="btn-group mt-1" role="group">
                    @foreach (var option in AvailableDoubleDartOptions)
                    {
                        <button type="button"
                                class="btn @(SelectedDartsUsedOnDouble == option ? "btn-primary" : "btn-outline-primary")"
                                @onclick="() => OnSelectDartsUsedOnDouble(option)">
                            @option
                        </button>
                    }
                </div>
            </div>

            @if (AvailableCheckoutDartOptions?.Count > 0)
            {
                <div class="mb-2">
                    <label style="color:black">Number of darts used for checkout:</label>
                    <div class="btn-group mt-1" role="group">
                        @foreach (var option in AvailableCheckoutDartOptions)
                        {
                            <button type="button"
                                    class="btn @(SelectedDartsUsedOnCheckout == option ? "btn-primary" : "btn-outline-primary")"
                                    @onclick="() => OnSelectDartsUsedOnCheckout(option)">
                                @option
                            </button>
                        }
                    </div>
                </div>
            }

            <div class="mt-3">
                <button class="btn btn-success me-2" @onclick="ConfirmCheckoutData">Confirm</button>
                <button class="btn btn-danger" @onclick="CloseCheckoutPopup">Cancel</button>
            </div>
        </div>
    </div>
}
